services:
  # IPFS
  ipfs-development:
    image: ipfs/kubo:latest
    restart: unless-stopped
    volumes:
      - ipfs_data:/data/ipfs
    environment:
      - IPFS_PATH=/data/ipfs
    ports:
      - 4001:4001/tcp
      - 4001:4001/udp
      - 8080
      # Admin panel, shouldn't be exposed to the internet
      - 5001:5001
    profiles:
      - development
    hostname: ipfs
    networks:
      - shared
  ipfs-production:
    image: ipfs/kubo:latest
    restart: unless-stopped
    volumes:
      - ipfs_data:/data/ipfs
    environment:
      - IPFS_PATH=/data/ipfs
    expose:
      # Admin panel, shouldn't be exposed to the internet
      - 5001
    ports:
      - 4001:4001/tcp
      - 4001:4001/udp
      - 8080
    profiles:
      - production
      - production-no-dns
    hostname: ipfs
    networks:
      - shared
  # Backend
  backend-development:
    build:
      context: .
      dockerfile: Dockerfile.backend.development
    restart: unless-stopped
    ports:
      - 1337:1337
    volumes:
      - ./src:/usr/src
    depends_on:
      - ipfs-development
      - mongo-development
    environment:
      - ENVIRONMENT=development
    profiles:
      - development
    hostname: backend
    networks:
      - shared
  backend-production:
    build:
      context: .
      dockerfile: Dockerfile.backend.production
    restart: unless-stopped
    depends_on:
      - ipfs-production
      - mongo-production
    environment:
      - ENVIRONMENT=production
    profiles:
      - production
      - production-no-dns
    hostname: backend
    expose:
      - 1337
    networks:
      - shared
  # Reverse proxy
  caddy:
    container_name: obss-proxy-caddy
    image: caddy:2-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    volumes:
      - './Caddyfile:/etc/caddy/Caddyfile'
      - caddy_data:/data
      - caddy_conf:/config
    depends_on:
      - backend-production
    profiles:
      - production
    networks:
      - shared
  localtunnel:
    container_name: obss-proxy-lt
    image: node:18
    restart: unless-stopped
    command: 'npx localtunnel --port 1337 --local-host backend'
    depends_on:
      - backend-production
    profiles:
      - production-no-dns
  # MongoDB
  mongo-development:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: obss-ipfs-uploader
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017
    profiles:
      - development
    hostname: mongo
    networks:
      - shared
  mongo-production:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: obss-ipfs-uploader
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017
    profiles:
      - production
      - production-no-dns
    hostname: mongo
    networks:
      - shared

volumes:
  ipfs_data:
  caddy_data:
  caddy_conf:
  mongo_data:

networks:
  shared:
